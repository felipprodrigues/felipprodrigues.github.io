- const headerTitle  = [ `Front End Developer Intern`, `Freelance Front End Developer`, `Freelance Front End Developer`, `Freelance Front End Developer` ];
- const headerSubtitle  = [ `Eventene`, `Camelias Produtos e Serviços`, `Tainá's Website`, `Theater Themed Template` ];
- const tabsItems = [ `_eventene.jade`, `_camelias.jade`, `_taina.jade`,  `_theater.jade` ];
- const tabsAttributes = [ 'tabOne', 'tabTwo', 'tabThree', 'tabFour' ];
- const conditionalAttributes =  { one: 'tabOne', two: 'tabTwo', three: 'tabThree', four: 'tabFour' };
- const eventList = [ 'Collaborate with the stack (Ruby, TypeScript, Vue, React);', 'Closely collaborate with the lead team designer to implement new features in the design system;', 'Streamline Webforms’ UI documentation in isolation for React’s Storybook;', 'Fix and update UI’s bugs in Webforms', 'Update the Ruby on Rails running app;', 'Document and update styles and components;', 'Perform fluid UI components with JQuery;', 'Implement newly designed components;', 'Refactor based on the Atomic Design Principle and BEM organizing structure;', 'Work in different ecosystems;', 'Deployment on GitHub' ]
- const camList = [ 'Translate mockup using Jade, SCSS;', 'Full implementation of HTML and CSS structures based on semantic HTML and BEM methodology;', 'Creation of modular and responsive application;', 'JQuery usage to perform fluid UX search and addition of new cards and tags;', 'GitHub based organization and project deployment' ]
- const tanList = [ 'Translate mockup using Jade, SCSS for static layout;', 'Full implementation of HTML and CSS structures based on semantic HTML and BEM methodology;', 'Creation of modular and responsive application;', 'Deployment on GitHub' ];
- const themeList = [ 'Translate mockup using Jade, SCSS for static layout;', 'Full HTML and SCSS implementation of the theater-themed static open source website template design;', 'Creation of modular and responsive web application;', 'SCSS Code structure based on BEM methodology;', 'Semantic HTML structure', 'Deployment on GitHub' ];
- const keyComment = [ '// Key Qualifications and Responsibilities' ]
- const svgIconsInitial = [ 'pug-color', 'sass-color', 'js-color' ]
- const svgTagsInitial = [ 'Pug', 'SCSS', 'JavaScript' ]
- const svgIconsLast = [ 'git-color', 'liquid-color', 'jekyll', 'jquery-color' ]
- const svgTagsLast = [ 'Git', `Shopify's Liquid`, 'Jekyll', 'JQuery' ]
- const debugLinks = [ 'https://www.udacity.com/course/intro-to-programming-nanodegree--nd000', 'https://www.internetingishard.com/', 'https://mastery.games/flexboxzombies/', 'https://mastery.games/gridcritters/', 'https://www.codecademy.com/learn/introduction-to-javascript', 'https://blog.da2k.com.br/curso-javascript-ninja/', 'https://beginnerjavascript.com/' ]
- const debugItems = [ 'Introduction to Programming', 'Interneting is hard', 'Flexbox Zombies', 'Grid Critters', 'Learn JavaScript', 'JavaScript Ninja', 'Beginner JavaScript' ]
- const debugAuthor = [ 'Udacity', 'Oliver James', 'David Geddski', 'David Geddski', 'Codecademy', 'Fernando Daciuk', 'Wes Bos' ]
- const commentH1Open = [ `<h1>` ]
- const commentH3Open = [ `<h3>` ]
- const commentUlOpen = [ `<ul>` ]
- const commentLiOpen = [ `<li>` ]
- const commentH1Close = [ `</h1>` ]
- const commentH3Close = [ `</h3>` ]
- const commentUlClose = [ `</ul>` ]

.resume__container
  aside.aside.is-tablet-hidden
    ul.aside__list
      for icon, slug in public.resume._data
        li.aside__elements
          a.aside__button(data-aside="#{ icon.attribute }")
            svg.aside__icons
              use(xlink:href="assets/defs.svg#icon-#{ icon.icon }")
          span.aside__tooltip #{ icon.tooltip }

  nav.tabs
    ul.list
      each att, i in tabsAttributes
        li.list__items
          a.tabs__holder(data-trigger="#{att}")
            span.tabs__item #{ tabsItems[i] }
            svg.tabs__icon
              use(xlink:href="assets/defs.svg#icon-close")

  .card.is-mobile-wide
    .card__holder.is-wide(data-panel="files")
      each att, i in tabsAttributes
        .card__holder--within(data-preview="#{att}")
          .card__header
            h1.card__title
              span.card__items--faded #{ commentH1Open[i] }
              | #{ headerTitle[i] }
              span.card__items--faded #{ commentH1Close[i] }
            h3.card__subtitle
              span.card__items--faded #{ commentH3Open[i] }
              | #{ headerSubtitle[i] }
              span.card__items--faded #{ commentH3Close[i] }

          if att === conditionalAttributes.one
            .card__qualifiers
              span.card__comment.is-commented-out #{ keyComment }
              ul.card__list
                li.card__items--faded #{ commentUlOpen[i] }
                each items in eventList
                  li.card__items.card__items--faded #{ commentLiOpen[i] }
                    span.card__items.card__items--highlight #{ items }
                li.card__items--faded #{ commentUlClose[i] }

          else if att === conditionalAttributes.two
            .card__qualifiers
              span.card__comment.is-commented-out #{ keyComment }
              ul.card__list
                li.card__items--faded #{ commentUlOpen[i] }
                each items in camList
                  li.card__items.card__items--faded #{ commentLiOpen[i] }
                    span.card__items.card__items--highlight #{ items }
                li.card__items--faded #{ commentUlClose[i] }

          else if att === conditionalAttributes.three
            .card__qualifiers
              span.card__comment.is-commented-out #{ keyComment }
              ul.card__list
                li.card__items--faded #{ commentUlOpen[i] }
                each items in tanList
                  li.card__items.card__items--faded #{ commentLiOpen[i] }
                    span.card__items.card__items--highlight #{ items }
                li.card__items--faded #{ commentUlClose[i] }

          else if att === conditionalAttributes.four
            .card__qualifiers
              span.card__comment.is-commented-out #{ keyComment }
              ul.card__list
                li.card__items--faded #{ commentUlOpen[i] }
                each items in themeList
                  li.card__items.card__items--faded #{ commentLiOpen[i] }
                    span.card__items.card__items--highlight #{ items }
                li.card__items--faded #{ commentUlClose[i] }

    .card__holder.has-center-block.is-wide.no-space-out(data-panel="search")
      a#buttonPreview.card__button.card__button--spaced.no-decoration Preview Resume
        svg
          use(xlink:href="assets/defs.svg#icon-preview")
      a.card__button.card__button--spaced.no-decoration(href="/assets/download/far-resume.pdf" download="felipe-resume") Download Resume
        svg
          use(xlink:href="assets/defs.svg#icon-download")

    .card__holder.has-center-block.is-wide.no-space-out(data-panel="source")
      p.card__items.card__items--highlight.card__items--padded Feel free to explore how this project was made by simply clicking
        a.card__items.card__items--link.no-decoration(href="https://github1s.com/felipprodrigues/felipprodrigues.github.io" target="_blank")
          |&nbsp; here
        |&nbsp; and get a full preview of the entire code

    // UPDATE INFO
    .card__holder.is-wide(data-panel="debugger")
      .card__header
        h1.card__title Debug control

      .card__wrapper
        .card__block.card__block--wider
          h4.card__subtitle.hack-font How did I learn to debug?
          ul.card__list.card__list--fadded
            each item, i in debugItems
              li.card__items.card__items--spaced
                a.card__items--highlight.is-flex-spaced.no-decoration.is-padded(target="_blank" href="#{ debugLinks[i] }") #{ item }
                  span.card__items--azure #{ debugAuthor[i] }

        .card__block.card__block--wider
          h4.card__subtitle.hack-font Where do I generally find unthought solutions?
          ul.card__list.card__list--grid
            li.card__items.no-space-in
              a(target="_blank" href="https://htmlreference.io/").card__items--highlight.card__items--tagged.no-decoration HTML Reference
            li.card__items.no-space-in
              a(target="_blank" href="https://developer.mozilla.org/en-US/").card__items--highlight.card__items--tagged.no-decoration MDN Web Docs
            li.card__items.no-space-in
              a(target="_blank" href="https://css-tricks.com/").card__items--highlight.card__items--tagged.no-decoration CSS Tricks
            li.card__items.no-space-in
              a(target="_blank" href="https://en.bem.info/methodology/").card__items--highlight.card__items--tagged.no-decoration BEM Methodology
            li.card__items.no-space-in
              a(target="_blank" href="https://stackoverflow.com/").card__items--highlight.card__items--tagged.no-decoration Stackoverflow
            li.card__items.no-space-in
              a(target="_blank" href="https://codepen.io").card__items--highlight.card__items--tagged.no-decoration Codepen
            li.card__items.no-space-in
              a(target="_blank" href="https://devdocs.io/").card__items--highlight.card__items--tagged.no-decoration DevDocs


    .card__holder.has-center-block.is-wide.no-space-out(data-panel="extension")
      .card__block
        p.card__items.card__items--highlight.has-center-text This projects was built with
        ul.card__list.card__list--horizontal
          each icon, i in svgIconsInitial
            li.education__items
              svg.education__icon
                use(xlink:href="assets/defs.svg#icon-#{ icon }")
              span #{ svgTagsInitial[i] }
        p.card__items.card__items--highlight.has-center-text But not only I also have experience working with
        ul.card__list.card__list--horizontal
          each icon, i in svgIconsLast
            li.education__items
              svg.education__icon
                use(xlink:href="assets/defs.svg#icon-#{ icon }")
              span #{ svgTagsLast[i] }

.modal
  .modal--inner
    .modal__holder
      img(src="/assets/modal/resume.png" alt='Dont worries, you can also download it &#x1F609;')
    button.modal__button Close








